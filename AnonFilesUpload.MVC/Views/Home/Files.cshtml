@{
    ViewData["Title"] = "Home Page";
}

@model AnonFilesUpload.Shared.Models.DataViewModel

<div class="container" id="app">


    <table class="table table-striped table-bordered">
        <tr>
            <th>File Id</th>
            <th>File Name</th>
            <th>Direct Link</th>
        </tr>


        <tr v-for="(item, index) in datas" :key="item.FileId">
            <td>{{item.fileId}}</td>
            <td>{{item.fileName}}</td>
            <td>
                <button @@click.prevent="Download(item.fileId)"
                   class="btn btn-primary btn-sm">
                    İndir
                </button>
                <button class="btn btn-sm btn-danger" @@click.prevent="deleteFile(item, item.fileId)">Sil</button>

            </td>
        </tr>

    </table>

    @*  <p>
        Kullanılan Alan: <b>@Model.UsedSpace</b>
        </p>

        <p>
        Kalan Alanı: <b>@Model.RemainingSpace</b>
        </p>*@

</div>

@section Scripts {

<environment names="Staging,Production">
    <script src="https://cdn.jsdelivr.net/npm/vue@2"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.21.4/axios.min.js"></script>
</environment>

<environment names="Development">
    <script src="https://unpkg.com/vue@next"></script>
    @*<script src="https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js"></script>*@
    <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.21.4/axios.js"> </script>
</environment>


<script type="text/javascript">


    const app = {

       data(){
           return {
               datas : [],
           }
       },

        mounted(){
           
            
            this.GetFiles();

        },

        methods: {

            deleteFile(file, fileId){
              
                axios({
                    method: "delete",
                    url: "/Home/Delete/"+fileId,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                }).then(function (response) {
                   if(response.data.isSuccessful) {
                    this.datas = [...this.datas].filter((data) => data != file);
                   } else{
                        alert("silme sırasında hata meydana geldi");
                   }

                });

            },

         

              GetFiles()  {
                  let dataList = '@Html.Raw(Json.Serialize(Model.DataModel))';
                  this.datas = JSON.parse(dataList);
                  console.log(this.datas);

                //axios({
                //    method: "get",
                //    url: "/Home/MyFiles",
                //    contentType: "application/json; charset=utf-8",
                //    dataType: "json",
                //}).then(function (response) {
                //    this.datas = response.data.data.dataModel;

                //});
            },

            Download(fileId){
                 axios({
                    method: "get",
                    url: "/Home/GetLink/" + fileId,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                }).then(function (response) {
                   if(response.data.isSuccessful) {
                        window.location.href = response.data.data;
                   }

                });
            }

        },

    }

    Vue.createApp(app).mount('#app');




</script>

}


