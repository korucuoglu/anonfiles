@addTagHelper * ,Microsoft.AspNetCore.Mvc.TagHelpers
@{
    ViewData["Title"] = "Home Page";
}

<div class="container" id="app">

    <form draggable="true" id="form" name="form" enctype="multipart/form-data">
        <input id="files" name="files" type="file" size="1" multiple />
        <button id="submit" @@click="submit" class="btn btn-primary">Gönder</button>

    </form>

    <table class="table table-bordered table-striped mt-5" id="myTable">

        <thead>
            <tr>
                <th>File Id</th>
                <th>File Name</th>
                <th>Durum</th>
                <th>Mesaj</th>
                <th>İndir</th>
            </tr>
        </thead>


        <tbody>





            <tr v-for="data in dataList" :key='data.index'>
                <td>{{data.fileId}}</td>
                <td>{{data.fileName}}</td>
                <td>
                    <i v-if="data.success == 'Unstarted'" style="color:blue" class="fas fa-times">Unstarted...</i>
                    <i v-if="data.success == 'Started'" style="color:red" class="fas fa-times">Started...</i>
                    <i v-if="data.success == 'Loaded'" style="color:green" class="fas fa-check-circle">Loaded...</i>
                    <i v-if="data.success == 'Error'" style="color:red" class="fas fa-times">Error...</i>


                </td>
                <td v-if="!data.success"></td>


                <td>{{data.message}}</td>
                <td>

                    <a class="btn btn-sm btn-primary" :class="{'disabled':!data.success}" :href="'https://localhost:44361/Home/GetLink/' + data.fileId">İndir</a>

                </td>
            </tr>
        </tbody>

    </table>

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css"
          integrity="sha512-Fo3rlrZj/k7ujTnHg4CGR2D7kSs0v4LLanw2qksYuRlEzO+tcaEPQogQ0KaoGN26/zrn20ImR1DfuLWnOo7aBA=="
          crossorigin="anonymous" referrerpolicy="no-referrer" />

</div>


@section Scripts {


    <script src="~/lib/microsoft/signalr/dist/browser/signalr.js"></script>

    <environment names="Staging,Production">
        <script src="https://cdn.jsdelivr.net/npm/vue@2"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.21.4/axios.min.js"
                integrity="sha512-lTLt+W7MrmDfKam+r3D2LURu0F47a3QaW5nF0c6Hl0JDZ57ruei+ovbg7BrZ+0bjVJ5YgzsAWE+RreERbpPE1g=="
                crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    </environment>

    <environment names="Development">
        <script src="https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.21.4/axios.js"
                integrity="sha512-un2apco0rYUiZXxbURvZ7oBq4u0cGrXaIbC4C1k5nAio6WRMyYvj8xKua3NqALOuu0F83zDha7nKoFCZzx26rg=="
                crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    </environment>

    <script type="text/javascript">

        var app = new Vue({
            el: '#app',
            data: {
                dataList: [


                ],
            },

            methods: {

                submit(event) {
                    event.preventDefault();
                    var files = document.getElementById("files").files;
                    var formData = new FormData();
                    this.dataList = [];

                    for (var i = 0; i != files.length; i++) {
                        formData.append("files", files[i]);



                        this.dataList.push({

                            index: i,
                            fileId: "",
                            fileName: files[i].name,
                            success: 'Unstarted',
                            message: ""

                        });


                    }

                    axios({
                        method: 'post',
                        url: '/home/upload',
                        data: formData,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                    }).then(function (response) {

                        if (response.data.finish) {

                        }
                    });


                }

            },

            mounted() {

                const connection = new signalR.HubConnectionBuilder()
                    .withUrl("/hubtest")
                    .configureLogging(signalR.LogLevel.Information)
                    .build();


                const filesUploadedFunction = (message) => {
                    const data = this.dataList.find(data => data.fileName == message.fileName);

                    data.fileId = message.fileId;
                    data.fileName = message.fileName;
                    data.message = message.message;

                    if (message.success) {
                        data.success = 'Loaded';
                    } else {
                        data.success = 'Error';
                    }


                }

                const startFileUploading = (fileName) => {

                    const data = this.dataList.find(data => data.fileName == fileName);
                    data.success = "Started";
                }

                connection.on('filesUploadedStarting', function (fileName) {

                    startFileUploading(fileName);

                    console.log(fileName + " yüklenmeye başlandı");

                });

                connection.on('filesUploaded', function (message) {

                    console.log(message.fileName + " yüklendi");
                    filesUploadedFunction(message);

                });


                connection.start()
                    .then(function () {

                    })
                    .catch(error => {
                        console.error(error.message);
                    });

            }

        });


    </script>




}



@*//const btn = document.getElementById("btn");

    // btn.addEventListener('click', () => {

    // var files = document.getElementById("files").files;
    // var formData = new FormData();

    // var tbodyRef = document.getElementById('myTable').getElementsByTagName('tbody')[0];


    // for (var i = 0; i < files.length; i++) {

    // formData.append("files", files[i]);

    // var newRow = tbodyRef.insertRow(tbodyRef.rows.length);
    // var newCell1 = newRow.insertCell(0);
    // var newCell2 = newRow.insertCell(1);
    // var newCell3 = newRow.insertCell(2);
    // var newCell4 = newRow.insertCell(3);
    // var newCell5 = newRow.insertCell(4);
    // newCell1.innerHTML = "";
    // newCell2.innerHTML = files[i].name
    // newCell3.innerHTML = "";
    // newCell4.innerHTML = "";

    // // var link = `<a class="btn btn-sm btn-primary" href="https://localhost:44361/Home/GetLink/${files[i].name}">
    İndir<a />`

    // ////var link = document.createElement('a');
    // ////link.classList.add("btn", "btn-sm", "btn-primary");
    // ////link.setAttribute('href', "https://localhost:44361/Home/GetLink/" + "");
    // ////link.innerHTML = "İndir";

    // //newCell5.appendChild(link);

    // newCell5.innerHTML = "";

    // }


    //})



    //const submitButton = document.getElementById("submit");

    //submitButton.addEventListener("click", (e) => {

    // e.preventDefault();

    // var files = document.getElementById("files").files;
    // var formData = new FormData();

    // for (var i = 0; i != files.length; i++) {
    // formData.append("files", files[i]);
    // }

    // axios({
    // method: 'post',
    // url: '/home/upload',
    // data: formData,
    // contentType: "application/json; charset=utf-8",
    // dataType: "json",
    // }).then(function (response) {

    // var data = response.data.data;
    // var tbodyRef = document.getElementById('myTable').getElementsByTagName('tbody')[0];


    // for (var i = 0; i < data.length; i++) {



    // var newRow = tbodyRef.insertRow(tbodyRef.rows.length);
    // var newCell1 = newRow.insertCell(0);
    // var newCell2 = newRow.insertCell(1);
    // var newCell3 = newRow.insertCell(2);
    // var newCell4 = newRow.insertCell(3);
    // var newCell5 = newRow.insertCell(4);
    // newCell1.innerHTML = data[i].fileId
    // newCell2.innerHTML = data[i].fileName

    // if (data[i].success) {
    // newCell3.innerHTML = `<i style="color:green" class="fas fa-check-circle"></i>`;
    // } else {
    // newCell3.innerHTML = `<i style="color:red" class="fas fa-times"></i>`;
    // }


    // newCell4.innerHTML = data[i].message

    // var link = document.createElement('a');
    // link.classList.add("btn", "btn-sm", "btn-primary");
    // link.setAttribute('href', "https://localhost:44361/Home/GetLink/" + data[i].fileId);
    // link.innerHTML = "İndir";

    // newCell5.appendChild(link);
    // }
    // }
    // );

    //})*@
