version: "3.8"
services:
  postgresdb:
    image: postgres
    container_name: postgresdb
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - postgresdb_volume:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=sa
      - POSTGRES_PASSWORD=AbcUser1234*
      - POSTGRES_DB=anonfiles
  minio:
    image: minio/minio:RELEASE.2022-02-07T08-17-33Z
    container_name: minio
    restart: always
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - ./ignore/minio/data/:/data
      - ./ignore/minio/conf/:/root/.minio 
    command: server --address ":9000" --console-address ":9001" /data
  redisdb:
    image: redis 
    container_name: redisdb
    restart: always
    ports:
      - "6379:6379"
  rabbitmq:
    image: rabbitmq:3.9.13-management
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
  upload.api:
    image: upload.api_image
    build:
      context: .
      dockerfile: src/Services/Upload/Presentation/FileUpload.Upload.Api/Dockerfile
    container_name: upload.api
    environment:
      - "ServiceApiSettings:IdentityBaseUri=http://identityserver.api"
      - "MinioAccessInfo:EndPoint=http://minio:9000"
      - "ConnectionStrings:DefaultConnection=User ID=sa; Password=AbcUser1234*; Server=postgresdb; Port=5432;Database=anonfiles;Integrated Security=true;Pooling=true"
      - "MinioAccessInfo:AccessKey=minioadmin"
      - "MinioAccessInfo:SecretKey=minioadmin"
      - RedisSettings:Port=6379
      - RedisSettings:Host=redisdb
      - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - "5002:80"
    depends_on:
      - postgresdb
      - identityserver.api
  identityserver.api:
   image: identityserver.api_image
   build:
    context: .
    dockerfile: src/Services/Identity/FileUpload.Identity.Server/Dockerfile
   container_name: identityserver.api
   restart: on-failure
   environment:
     - "ConnectionStrings:DefaultConnection=User ID=sa; Password=AbcUser1234*; Server=postgresdb; Port=5432;Database=anonfiles;Integrated Security=true;Pooling=true"
     - ConnectionStrings:RabbitMQ=rabbitmq
     - ASPNETCORE_ENVIRONMENT=Development
   ports:
     - "5001:80"
   depends_on:
    - postgresdb
  aspnetcoremvc.web:
    image: aspnetcoremvc.web_image
    build:
      context: .
      dockerfile: src/Clients/MVCClient/Presentation/FileUpload.MVC/Dockerfile
    container_name: aspnetcoremvc.web
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ServiceApiSettings:IdentityBaseUri=http://identityserver.api
      - ServiceApiSettings:GatewayBaseUri=http://gateway.api
    ports:
      - "5003:80"
  gateway.api:
    image: gateway.api_image
    build:
      context: .
      dockerfile: FileUpload.Gateway/Dockerfile
    container_name: gateway.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - IdentityBaseUri=http://identityserver.api
    ports:
      - "5000:80"
    depends_on:
    - identityserver.api
  sendmail.worker:
   image: sendmail.workserservice_image
   build:
    context: .
    dockerfile: src/WorkerServices/SendEmail.WorkerService/Dockerfile
   container_name: sendmail.worker
   restart: always
   environment:
    - ASPNETCORE_ENVIRONMENT=Development
    - RabbitMQ=rabbitmq
    - MailSettings:MailAdress=****
    - MailSettings:MailPassword=****
   depends_on:
    - rabbitmq
volumes:
  postgresdb_volume:
  minio_volume: