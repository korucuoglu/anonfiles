@{
    ViewData["Title"] = "Home Page";
}

@model List<FileUpload.Shared.Models.MyFilesViewModel>

<div class="container" id="app">


    <table class="table table-striped table-bordered">
        <tr>
            <th>File Id</th>
            <th>File Name</th>
            <th>Direct Link</th>
        </tr>


        <tr v-for="(item, index) in datas" :key="index">
            <td>{{item.fileId}}</td>
            <td>{{item.fileName}}</td>
            <td>
                <button @@click.prevent="Download(item.fileId)" class="btn btn-primary btn-sm">
                    İndir
                </button>
                <button class="btn btn-sm btn-danger" @@click.prevent="deleteFile(item.fileId)">Sil</button>
            </td>
        </tr>

    </table>

</div>

@section Scripts {

@await Html.PartialAsync("_VueJsPartial")

<script>

    const app = {
        data() {
            return {

                datas: JSON.parse('@Html.Raw(Json.Serialize(Model))')


            }
        },

        methods: {

            deleteFile(fileId) {

                axios({
                    method: "delete",
                    url: "/Home/Delete/" + fileId,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                }).then(response => {
                    
                    if (response.data.isSuccessful) 
                    {
                       this.datas = this.datas.filter(data => data.fileId != fileId);

                        if (response.data.data != null) 
                        {
                             this.datas.push(
                             {
                                fileId: response.data.data.fileId,
                                fileName: response.data.data.fileName,
                                size: response.data.data.size,
                                uploadedDate: response.data.data.uploadedDate,
                            });
                        }

                    } else {
                        alert("hata");

                    }
                });

            },


            Download(fileId) {

                axios({
                    method: "get",
                    url: "/Home/GetLink/" + fileId,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                }).then(response => {
                    if (response.data.isSuccessful) {
                        window.location.href = response.data.data;
                    }

                });
            }

        },

    }

    Vue.createApp(app).mount('#app');
</script>

}
