@{
    ViewData["Title"] = "Home Page";
}

@model FileUpload.Shared.Models.Files.MyFilesViewModel

<div class="container" id="app">

    <table class="table table-striped table-bordered">
        <tr>
            <th>File Id</th>
            <th>File Name</th>
            <th>Direct Link</th>
        </tr>

        <tr v-for="(item, index) in datas" :key="index">
            <td>{{item.fileId}}</td>
            <td>{{item.fileName}}</td>
            <td>
                <button @@click.prevent="Download(item.fileId)" class="btn btn-primary btn-sm">
                    İndir
                </button>
                <button class="btn btn-sm btn-danger" @@click.prevent="deleteFile(item.fileId)">Sil</button>
            </td>
        </tr>
    </table>


 <nav aria-label="Page navigation example" class="d-flex flex-row justify-content-center">
  <ul class="pagination">
    <li class="page-item"><a class="page-link" href="#">Previous</a></li>
    <li class="page-item"><a class="page-link" href="#">1</a></li>
    <li class="page-item"><a class="page-link" href="#">2</a></li>
    <li class="page-item"><a class="page-link" href="#">3</a></li>
    <li class="page-item"><a class="page-link" href="#">Next</a></li>
  </ul>
</nav>

</div>

@section Scripts {

@await Html.PartialAsync("_VueJsPartial")

<script>

    const app = {
        data() {
            return {

                datas: JSON.parse('@Html.Raw(Json.Serialize(Model.Files))'),
                PageInfo: JSON.parse('@Html.Raw(Json.Serialize(Model.Pages))'),
                queryString: {Page:1, Number:10, OrderBy:1, Extension:"" }


            }
        },
        created(){

            this.getQuery();
          
        },
        methods: {

            getQuery(){
                let urlParams = new URLSearchParams(window.location.search);
           
                if (urlParams.has('page'))
                {
                    this.queryString.Page = urlParams.get('page');
                }

                if (urlParams.has('number'))
                {
                    this.queryString.Number = urlParams.get('number');
                }

                if (urlParams.has('orderBy'))
                {
                    this.queryString.OrderBy = urlParams.get('orderBy');
                }

                if (urlParams.has('extension'))
                {
                    this.queryString.Extension = urlParams.get('extension');
                }
            },


            deleteFile(fileId) {

                axios({
                    method: "delete",
                    url:`/Home/Delete/${fileId}?page=${this.queryString.Page}&number=${this.queryString.Number}&orderBy=${this.queryString.OrderBy}&Extension=${this.queryString.Extension}`,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                }).then(response => {
                    
                    if (response.data.isSuccessful) 
                    {
                       this.datas = this.datas.filter(data => data.fileId != fileId);

                        if (response.data.data != null) 
                        {
                             this.datas.push(
                             {
                                fileId: response.data.data.fileId,
                                fileName: response.data.data.fileName,
                                size: response.data.data.size,
                                uploadedDate: response.data.data.uploadedDate,
                            });
                        }
                    }
                    else 
                    {
                        alert("hata");

                    }
                });
            },

            Download(fileId) {

                console.log(this.queryString)
                axios({
                    method: "get",
                    url:`/Home/GetLink/${fileId}`,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                }).then(response => {
                    if (response.data.isSuccessful) {
                        window.location.href = response.data.data;
                    }

                });
            }
        },
    }
    Vue.createApp(app).mount('#app');
</script>

}
